{
	"info": {
		"_postman_id": "9f7719cc-612f-460d-8ca1-9c063400d7ea",
		"name": "GoRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37361267"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    var res = pm.response.json();\r",
							"    pm.environment.set(\"ID\", res.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "cf49fb4f45e7bb160a024a5f822f6d15b32b9c4b5ff6113c65d1128963207a0f",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Naresh Yadala\",\r\n    \"email\": \"Testing7854648765@gmail.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"inactive\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}public/v2/users",
					"host": [
						"{{URL}}public"
					],
					"path": [
						"v2",
						"users"
					]
				},
				"description": "### Add a console log statement to the request\n\nThis endpoint allows you to create a new user by making an HTTP POST request to the specified URL. The request should include the user's name, email, gender, and status in the request body.\n\n#### Request Body\n\n- name (text, required): The name of the user.\n    \n- email (text, required): The email address of the user.\n    \n- gender (text, required): The gender of the user.\n    \n- status (text, required): The status of the user.\n    \n\n#### Response\n\nUpon successful creation of the user, the server will respond with a status code of 201 and a JSON object containing the newly created user's id, name, email, gender, and status.\n\n``` javascript\nconsole.log('Making a POST request to create a new user:', {name: '', email: '', gender: '', status: ''});\n\n ```"
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Parse the response JSON\r",
							"var responseJson = pm.response.json();\r",
							"\r",
							"// Get the ID from the environment variable\r",
							"var expectedId = pm.environment.get(\"ID\");\r",
							"\r",
							"// Validate the response body\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.expect(responseJson).to.be.an(\"object\");\r",
							"    pm.expect(responseJson.id).to.eql(expectedId);\r",
							"    pm.expect(responseJson.name).to.eql(\"Naresh Yadala\");\r",
							"    pm.expect(responseJson.email).to.eql(\"Testing7854648765@gmail.com\");\r",
							"    pm.expect(responseJson.gender).to.eql(\"male\");\r",
							"    pm.expect(responseJson.status).to.eql(\"inactive\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "cf49fb4f45e7bb160a024a5f822f6d15b32b9c4b5ff6113c65d1128963207a0f",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}public/v2/users/{{ID}}",
					"host": [
						"{{URL}}public"
					],
					"path": [
						"v2",
						"users",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	]
}